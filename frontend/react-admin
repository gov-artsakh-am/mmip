diff --git a/frontend/package.json b/frontend/package.json
index a10bc93..eb6d41e 100644
--- a/frontend/package.json
+++ b/frontend/package.json
@@ -14,13 +14,16 @@
     "@material-ui/core": "4.11.4",
     "@material-ui/icons": "4.11.2",
     "axios": "0.21.1",
+    "connected-react-router": "^6.9.1",
+    "history": "4.10.1",
     "react": "17.0.2",
     "react-admin": "3.16.4",
     "react-dom": "17.0.2",
     "react-redux": "7.2.4",
     "react-router": "5.2.0",
     "react-router-dom": "5.2.0",
-    "redux": "4.1.0"
+    "redux": "4.1.0",
+    "redux-saga": "^1.1.3"
   },
   "devDependencies": {
     "@babel/core": "7.14.6",
diff --git a/frontend/src/App.js b/frontend/src/App.js
index 868e96c..47825d8 100644
--- a/frontend/src/App.js
+++ b/frontend/src/App.js
@@ -37,6 +37,7 @@ const App = () => {
               }}
             />
           )}
+          <div>aaaa vv</div>
         </AppBar>
         <div className="routes">{routes}</div>
       </div>
diff --git a/frontend/src/index.js b/frontend/src/index.js
index e40e6aa..67b2788 100644
--- a/frontend/src/index.js
+++ b/frontend/src/index.js
@@ -2,14 +2,17 @@ import React from 'react';
 import ReactDOM from 'react-dom';
 import { Provider } from 'react-redux';
 import { BrowserRouter } from 'react-router-dom';
+import { createBrowserHistory } from 'history';
 
 import store from './store';
 
 import App from './App';
 
+const history = createBrowserHistory();
+
 const app = (
   <React.StrictMode>
-    <Provider store={store}>
+    <Provider store={store({history})}>
       <BrowserRouter>
         <App />
       </BrowserRouter>
diff --git a/frontend/src/pages/Auth/Auth.js b/frontend/src/pages/Auth/Auth.js
index 036230d..2b394f1 100644
--- a/frontend/src/pages/Auth/Auth.js
+++ b/frontend/src/pages/Auth/Auth.js
@@ -1,9 +1,38 @@
 import React from "react";
+import {Link} from 'react-router-dom';
 
 import "./Auth.css";
+import {Admin, Resource,ListGuesser } from 'react-admin';
+import api from '../../utils/Api'
 
-const Auth = () => {
-  return <div className="Auth"></div>;
+const dataProvider = {
+  getList: (resource, params) => {
+    console.log(resource, params, '=========');
+    return api.get('userss', null, (data) => ({
+      data,
+      total: data.length,
+    }));
+  },
+};
+
+const PostList = (props) => {
+  console.log(props, '----props list');
+  return <div>Aaaaaa</div>;
+};
+
+const Admin1 = ({history}) => {
+ return (
+   <div>
+     <button onClick={() => {api.get('users',{},console.log,console.log)}}>request</button>
+     <Admin dataProvider={dataProvider} history={history} >
+       <Resource name="users" list={ListGuesser} />
+     </Admin>
+   </div>
+ );
+}
+
+const Auth = ({ history }) => {
+  return <div className="Auth"><Link to='/admin'>aaaa</Link><Admin1 history={history}/></div>;
 };
 
 export default Auth;
diff --git a/frontend/src/store/index.js b/frontend/src/store/index.js
index 96a7c7b..778b39d 100644
--- a/frontend/src/store/index.js
+++ b/frontend/src/store/index.js
@@ -1,4 +1,32 @@
-import { createStore } from 'redux';
+import {
+    createStore
+} from 'redux';
+import createSagaMiddleware from 'redux-saga';
 import rootReducer from './reducers';
+import { all, fork } from 'redux-saga/effects';
 
-export default createStore(rootReducer);
+import {
+    adminReducer,
+    adminSaga,
+    USER_LOGOUT,
+} from 'react-admin';
+
+export default ({
+    history
+}) => {
+
+    // const saga = function* rootSaga() {
+    //     yield all(
+    //         [
+    //             adminSaga(/*dataProvider, authProvider*/),
+    //             // add your own sagas here
+    //         ]
+    //     );
+    // };
+
+    // const sagaMiddleware = createSagaMiddleware();
+    // sagaMiddleware.run(saga);
+    return createStore(rootReducer({
+        history
+    }))
+};
\ No newline at end of file
diff --git a/frontend/src/store/reducers/index.js b/frontend/src/store/reducers/index.js
index 2a3fbbd..caaa014 100644
--- a/frontend/src/store/reducers/index.js
+++ b/frontend/src/store/reducers/index.js
@@ -1,9 +1,8 @@
 import { combineReducers } from 'redux';
+import { connectRouter } from 'connected-react-router';
+import { adminReducer } from 'react-admin';
 
-function toDelete() {
-  return {};
-}
-
-export default combineReducers({
-  toDelete,
+export default ({ history }) => combineReducers({
+  admin: adminReducer,
+  router: connectRouter(history),
 });
diff --git a/frontend/src/utils/Api.js b/frontend/src/utils/Api.js
index ee95491..c59c3f5 100644
--- a/frontend/src/utils/Api.js
+++ b/frontend/src/utils/Api.js
@@ -1,7 +1,7 @@
 /* eslint-disable class-methods-use-this */
 import axios from 'axios';
 
-axios.defaults.baseURL = 'https://api.airtable.com/v0/';
+axios.defaults.baseURL = 'https://jsonplaceholder.typicode.com';
 axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';
 
 /// TODO: change api key to user api
@@ -32,15 +32,16 @@ class Api {
   errorCallback(error) {
     // eslint-disable-next-line no-console
     console.error(error);
+    return { data: [], total: 0 };
   }
 
   buildRequest(method, url, params, success = this.successCallback, error = this.errorCallback) {
-    axios[method](url, params).then(({ data }) => success(data)).catch(error);
+    return axios[method](url, params).then(({ data }) => success(data)).catch(error);
   }
 
   get(url, params, success, error) {
     const query = this.queryParams(params);
-    this.buildRequest('get', url + query, null, success, error);
+    return this.buildRequest('get', url + query, null, success, error);
   }
 
   post(url, params, success, error) {
